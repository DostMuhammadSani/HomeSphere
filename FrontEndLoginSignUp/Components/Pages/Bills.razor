@page "/bills"
@using Microsoft.AspNetCore.Components.Web
@using Blazored.SessionStorage
@using System.Security.Claims
@inject ISessionStorageService SessionStorage
@rendermode InteractiveServer

@if (role == "Admin")
{
    <div class="page-container">
        <Sidebars></Sidebars>
        <div class="main-content">
            <div class="container">
                <div class="header-section">
                    <h1 class="header">Bills Management</h1>
                    <p class="sub-header">Comprehensive bill management system for your property</p>
                </div>

                <div class="cards-container">
                    <!-- Card 1: General Bills -->
                    <div class="card" @onclick="NavigateToGeneralBills">
                        <div class="card-icon">
                            <i class="fas fa-file-invoice-dollar"></i>
                        </div>
                        <div class="card-content">
                            <h2>General Bills</h2>
                            <p>Manage community-wide bills including maintenance, utilities, and services</p>
                        </div>
                        <div class="card-footer">
                            <span class="action-text">View & Manage</span>
                            <i class="fas fa-arrow-right"></i>
                        </div>
                    </div>

                    <!-- Card 2: Resident Bills -->
                    <div class="card" @onclick="NavigateToResidentBills">
                        <div class="card-icon">
                            <i class="fas fa-user-tag"></i>
                        </div>
                        <div class="card-content">
                            <h2>Resident Bills</h2>
                            <p>View and manage individual resident bills and payments</p>
                        </div>
                        <div class="card-footer">
                            <span class="action-text">View & Manage</span>
                            <i class="fas fa-arrow-right"></i>
                        </div>
                    </div>

                    <!-- Card 3: Bill Status -->
                    <div class="card" @onclick="NavigateToBillStatus">
                        <div class="card-icon">
                            <i class="fas fa-clipboard-check"></i>
                        </div>
                        <div class="card-content">
                            <h2>Bill Status</h2>
                            <p>Track payment status, overdue bills, and generate reports</p>
                        </div>
                        <div class="card-footer">
                            <span class="action-text">View Status</span>
                            <i class="fas fa-arrow-right"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string token;
    public string role;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                token = await SessionStorage.GetItemAsync<string>("authToken");
                var claims = RoleFetch.ParseClaimsFromJwt(token);
                var roleClaim = claims.FirstOrDefault(c => c.Type == ClaimTypes.Role);
                role = roleClaim.Value;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error retrieving token: {ex.Message}");
            }
        }
    }

    private void NavigateToGeneralBills()
    {
        NavigationManager.NavigateTo("/general-bills");
    }

    private void NavigateToResidentBills()
    {
        NavigationManager.NavigateTo("/resident-bills");
    }

    private void NavigateToBillStatus()
    {
        NavigationManager.NavigateTo("/bill-status");
    }

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;
}

<style>
    /* Base Styles */
    .page-container {
        display: flex;
        min-height: 100vh;
        background-color: #f8f9fa;
    }

    .main-content {
        flex: 1;
        padding: 20px;
        background-color: #f8f9fa;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    .header-section {
        text-align: center;
        margin-bottom: 3rem;
    }

    .header {
        color: #1b6cb9;
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .sub-header {
        color: #6c757d;
        font-size: 1.25rem;
        margin-bottom: 0;
    }

    /* Cards Container */
    .cards-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
    }

    /* Card Styles */
    .card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: all 0.3s ease;
        cursor: pointer;
        border: 1px solid #e9ecef;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
            border-color: #1b6cb9;
        }

    .card-icon {
        background-color: #1b6cb9;
        color: white;
        font-size: 2rem;
        padding: 1.5rem;
        text-align: center;
    }

    .card-content {
        padding: 1.5rem;
        flex-grow: 1;
    }

        .card-content h2 {
            color: #1b6cb9;
            font-size: 1.5rem;
            margin-bottom: 1rem;
            font-weight: 600;
        }

        .card-content p {
            color: #6c757d;
            font-size: 1rem;
            line-height: 1.5;
            margin-bottom: 0;
        }

    .card-footer {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem 1.5rem;
        background-color: #f8f9fa;
        border-top: 1px solid #e9ecef;
        transition: all 0.3s ease;
    }

    .card:hover .card-footer {
        background-color: #e9f0f8;
    }

    .action-text {
        color: #1b6cb9;
        font-weight: 500;
        font-size: 0.9rem;
    }

    .card-footer i {
        color: #1b6cb9;
        transition: transform 0.3s ease;
    }

    .card:hover .card-footer i {
        transform: translateX(5px);
    }

    /* Responsive Styles */
    @@media (max-width: 768px) {
        .page-container {
            flex-direction: column;
        }

        .main-content {
            padding: 15px;
        }

        .container {
            padding: 1.5rem;
        }

        .header {
            font-size: 2rem;
        }

        .sub-header {
            font-size: 1.1rem;
        }

        .cards-container {
            grid-template-columns: 1fr;
        }
    }

    @@media (max-width: 576px) {
        .header {
            font-size: 1.75rem;
        }

        .sub-header {
            font-size: 1rem;
        }

        .card-icon {
            font-size: 1.75rem;
            padding: 1.25rem;
        }

        .card-content {
            padding: 1.25rem;
        }

            .card-content h2 {
                font-size: 1.3rem;
            }
    }
</style>